@model HAMS.WebUI.Models.StudentViewModel

@{
    ViewBag.Title = "UserInfo";
}

@section styles{
    <style>

        input[type="checkbox"] {
            width: 20px;
            height: 20px;
        }

    </style>
}

@section scripts{

    <script>

        $(document).ready(function () {



        });

    </script>

}

<h2>User info</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div>
            @Html.Label("Photo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                <img src="@Url.Action("Photo", "Account", new { userId = Model.Id })" width="150" height="130" class="img-thumbnail" style="margin-bottom: 10px;" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Email)
                @Html.HiddenFor(model => model.Email)
            </div>
        </div>        

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.FirstName)
                @Html.HiddenFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.LastName)
                @Html.HiddenFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Role)
                @Html.HiddenFor(model => model.Role)
                @*@Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @if (Model.Role == "Student")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Specialization, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Specialization)
                    @Html.HiddenFor(model => model.Specialization)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Department", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EnterYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("EnterYear", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EnterYear, "", new { @class = "text-danger" })
                </div>
            </div>      
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "GetAllUsers", null, new { @class = "btn btn-default"})
</div>
